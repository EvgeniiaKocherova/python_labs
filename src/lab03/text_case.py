import sys
sys.path.append("../lib")
from text import *

print("—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ normalize")
assert print_arg_ret(normalize, "–ü—Ä–ò–≤–ï—Ç\n–ú–ò—Ä\t") == "–ø—Ä–∏–≤–µ—Ç –º–∏—Ä"
assert print_arg_ret(normalize, "—ë–∂–∏–∫, –Å–ª–∫–∞", yo2e=True) == "–µ–∂–∏–∫, –µ–ª–∫–∞"
assert print_arg_ret(normalize, "Hello\r\nWorld") == "hello world"
assert print_arg_ret(normalize, "  –¥–≤–æ–π–Ω—ã–µ   –ø—Ä–æ–±–µ–ª—ã  ") == "–¥–≤–æ–π–Ω—ã–µ –ø—Ä–æ–±–µ–ª—ã"
assert print_arg_ret(normalize, "—ë–∂–∏–∫, –Å–ª–∫–∞", yo2e=False) == "—ë–∂–∏–∫, —ë–ª–∫–∞"
assert print_arg_ret(normalize, "") == ""
assert print_arg_ret(normalize, "   ") == ""
assert print_arg_ret(normalize, "–ü—Ä–ò–≤–ï—Ç\n–ú–ò—Ä\t", casefold=False) == "–ü—Ä–ò–≤–ï—Ç –ú–ò—Ä"
print("     ")


print("—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ tokenize")
assert print_arg_ret(tokenize, "–ø—Ä–∏–≤–µ—Ç –º–∏—Ä") == ["–ø—Ä–∏–≤–µ—Ç", "–º–∏—Ä"]
assert print_arg_ret(tokenize, "hello,world!!!") == ["hello", "world"]
assert print_arg_ret(tokenize, "–ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É –∫—Ä—É—Ç–æ") == ["–ø–æ-–Ω–∞—Å—Ç–æ—è—â–µ–º—É", "–∫—Ä—É—Ç–æ"]
assert print_arg_ret(tokenize, "2025 –≥–æ–¥") == ["2025", "–≥–æ–¥"]
assert print_arg_ret(tokenize, "emoji üòÄ –Ω–µ —Å–ª–æ–≤–æ") == ["emoji", "–Ω–µ", "—Å–ª–æ–≤–æ"]
assert print_arg_ret(tokenize, "") == []
assert print_arg_ret(tokenize, "  –¥–≤–æ–π–Ω—ã–µ   –ø—Ä–æ–±–µ–ª—ã  ") == ["–¥–≤–æ–π–Ω—ã–µ", "–ø—Ä–æ–±–µ–ª—ã"]
print("     ")

print("—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ count_freq")
assert print_arg_ret(count_freq, ["a","b","a","c","b","a"]) == {"a":3,"b":2,"c":1}
assert print_arg_ret(count_freq, ["bb","aa","bb","aa","cc"]) == {"aa":2,"bb":2,"cc":1}
assert print_arg_ret(count_freq, ["bb"]) == {"bb":1}
assert print_arg_ret(count_freq, []) == {}
print("     ")


print("—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ top_n")
assert print_arg_ret(top_n, {"a":3,"b":2,"c":1}, n=2) == [("a",3), ("b",2)]
assert print_arg_ret(top_n, {"aa":2,"bb":2,"cc":1}, n=2) == [("aa",2), ("bb",2)]
assert print_arg_ret(top_n, {"aa":2,"bb":2,"cc":1}, n=0) == []
assert print_arg_ret(top_n, {"aa":2,"bb":2,"cc":1}, n=1) == [("aa",2)]
assert print_arg_ret(top_n, {"aa":2,"bb":2,"cc":1}, n=10) == [("aa",2), ("bb",2), ("cc", 1)]


